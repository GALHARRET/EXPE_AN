t1<-Sys.time()
for(b in 1:B){
x<-c(rexp(n,lambda0),ML)
X<-rep(NA,length(x))
for(i in 1:length(X)){
X[i]=max(rnorm(1,x[i],sig),0)
}
fit <- sampling(modelE,
data=list(n=length(X),X=X,ML=ML,p=p,sig=sig), iter = 10000, chains = 1)
res1[[b]]<-extract(fit)
}
t2<-Sys.time()
res2<-list()
(t2-t1)
(t2-t1)*200
(t2-t1)*200/3600
res1<-list()
for(b in 1:B){
x<-c(rexp(n,lambda0))
X<-rep(NA,length(x))
for(i in 1:length(X)){
X[i]=max(rnorm(1,x[i],sig),0)
}
fit <- sampling(modelE,
data=list(n=length(X),X=X,ML=ML,p=p,sig=sig), iter = 10000, chains = 1)
res1[[b]]<-extract(fit)
}
res2<-list()
for(b in 1:B){
x<-c(rexp(n,lambda0),ML)
X<-rep(NA,length(x))
for(i in 1:length(X)){
X[i]=max(rnorm(1,x[i],sig),0)
}
fit <- sampling(modelE,
data=list(n=length(X),X=X,ML=ML,p=p,sig=sig), iter = 10000, chains = 1)
res2[[b]]<-extract(fit)
}
save(res=list(res1,res2),file="~/Downloads/res.RData")
res
res=list(res1,res2)
save(res,file="~/Downloads/res.RData")
res<-extract(fit)
n<-50
lambda0<-(-log(p))/ML
sig=.35/lambda0
B<-1000
res1<-list()
for(b in 1:B){
x<-c(rexp(n,lambda0))
X<-rep(NA,length(x))
for(i in 1:length(X)){
X[i]=max(rnorm(1,x[i],sig),0)
}
fit <- sampling(modelE,
data=list(n=length(X),X=X,ML=ML,p=p,sig=sig), iter = 10000, chains = 1)
res<-extract(fit)
res1[[b]]<-res$x
}
B
length(res&)
length(res1)
proba_rejet<-function(x,ML,p){
return(mean(x>=ML)>=p)
}
res1[[1]]$x
res1[[1]]
S<-0
for(i in 1:length(X)){
S<-S+apply(res1[[i]],2,proba_rejet,ML=100,p=.001)
}
S<-0
for(i in 1:length(res1)){
S<-S+apply(res1[[i]],2,proba_rejet,ML=100,p=.001)
}
S/length(res1)
proba_rejet<-function(x,ML,p){
return(sum(mean(x>=ML)>=p))
}
S<-0
for(i in 1:length(res1)){
S<-S+apply(res1[[i]],2,proba_rejet,ML=100,p=.001)
}
S/length(res1)
sum(S)/length(res1)
sum(S)
p
apply(res1[[i]],2,proba_rejet,ML=100,p=.001)
proba_rejet<-function(x,ML,p){
return(sum(mean(x>=ML)>=p))
}
proba_rejet(rexp(100,lambda0),100,.001)
res1[[i]]
rexp(100,lambda0)
proba_rejet(rexp(100,lambda0),100,.001)
proba_rejet(rexp(100,lambda0),100,.001)
proba_rejet(rexp(100,lambda0),100,.001)
proba_rejet(rexp(100,lambda0),100,.001)
proba_rejet(rexp(100,lambda0),100,.001)
proba_rejet<-function(x,ML,p){
return(mean(mean(x>=ML)>=p))
}
proba_rejet(rexp(100,lambda0),100,.001)
M<-0
for(i in 1:length(res1)){
M<-M+apply(res1[[i]],2,proba_rejet,ML=100,p=.001)
}
M
apply(res1[[i]],2,proba_rejet,ML=100,p=.001)
M<-0
for(i in 1:length(res1)){
M<-M+mean(apply(res1[[i]],2,proba_rejet,ML=100,p=.001))
}
M
ML=100
p=.001
n<-50
lambda0<-(-log(p))/ML
sig=.35/lambda0
B<-10
res1<-list()
for(b in 1:B){
x<-c(rexp(n,lambda0))
X<-rep(NA,length(x))
for(i in 1:length(X)){
X[i]=max(rnorm(1,x[i],sig),0)
}
fit <- sampling(modelE,
data=list(n=length(X),X=X,ML=ML,p=p,sig=sig), iter = 10000, chains = 1)
res<-extract(fit)
res1[[b]]<-res$x
}
res2<-list()
for(b in 1:B){
x<-c(rexp(n,lambda0),ML)
X<-rep(NA,length(x))
for(i in 1:length(X)){
X[i]=max(rnorm(1,x[i],sig),0)
}
fit <- sampling(modelE,
data=list(n=length(X),X=X,ML=ML,p=p,sig=sig), iter = 10000, chains = 1)
res<-extract(fit)
res2[[b]]<-res$x
}
res=list(res1,res2)
save(res,file="~/Downloads/res.RData")
length(res1)
proba_rejet<-function(x,ML,p){
return(mean(mean(x>=ML)>=p))
}
M<-0
for(i in 1:length(res1)){
M<-M+mean(apply(res1[[i]],2,proba_rejet,ML=100,p=.001))
}
M
M<-0
for(i in 1:length(res2)){
M<-M+mean(apply(res2[[i]],2,proba_rejet,ML=100,p=.001))
}
M
M1=M
M1=c(M1,M)
M1
library(MASS)
Df <-read_excel("~/Nextcloud/sample pooling/mycotoxines/Data for sample pooling - ZEA.xlsx", sheet = "database-ZEA",na="<LOQ")
library(readxl)
library(dplyr)
library(gtsummary)
lambda0<-function(s,ML){
return(-log(s)/ML)
}
library(MASS)
Df <-read_excel("~/Nextcloud/sample pooling/mycotoxines/Data for sample pooling - ZEA.xlsx", sheet = "database-ZEA",na="<LOQ")
Df$category<-as.factor(Df$category)
Df$Result[is.na(Df$Result)==T]=Df$LOQ[is.na(Df$Result)==T]/2
df<-Df%>% filter(LOQ==10 & (Df$Result<Df$ML  |
Df$Result>Df$ML&Df$`Above limit (when 0)`==0))
dim(df)
df$out<-df$Result>df$ML
df$contaminated<-factor(df$out,labels=c("no","yes"))
df %>%
tbl_cross(
row = category,
col = contaminated,
percent = "row"
)
df2<-df %>% filter(category=="I")
X=df2$Result
ML=df$ML[1]
hist(X,col="darkblue",freq=F)
abline(v=log(ML),col=2,lty=2,lwd=2)
abline(ML,col=2,lty=2,lwd=2)
abline(v=ML,col=2,lty=2,lwd=2)
hist(X,col="darkblue",freq=F)
abline(v=ML,col=2,lty=2,lwd=2)
x<-seq(0,60,1)
lambda0=(-log(p))/ML
lambda0
hist(X,col="darkblue",freq=F)
abline(v=ML,col=2,lty=2,lwd=2)
x<-seq(0,60,1)
lines(x,dexp(x,lambda0))
hist(X-min(X),col="darkblue",freq=F)
abline(v=ML,col=2,lty=2,lwd=2)
x<-seq(0,60,1)
lines(x,dexp(x,lambda0))
df2<-df %>% filter(category=="I"&LOQ==10)
X=df2$Result
ML=df$ML[1]
p=.02
lambda0=(-log(p))/ML
hist(X-min(X),col="darkblue",freq=F)
abline(v=ML,col=2,lty=2,lwd=2)
x<-seq(0,60,1)
lines(x,dexp(x,lambda0),col=3)
df2<-df %>% filter(category=="I"&LOQ==10)
X=df2$Result
ML=df2$ML[1]
p=.02
lambda0=(-log(p))/ML
hist(X-min(X),col="darkblue",freq=F)
abline(v=ML,col=2,lty=2,lwd=2)
x<-seq(0,60,1)
lines(x,dexp(x,lambda0),col=3)
Mat<-matrix(NA,ncol=3,nrow=4)
n<-50
Mat<-matrix(NA,ncol=3,nrow=4)
B<-10
T1<-Sys.time()
for(i in 1:4){
for(j in 1:3){
M<-0
lambda0<-(-log(p[j]))/ML[i]
sig=.35/lambda0
for(b in 1:B){
x<-c(rexp(n,lambda0))
X<-rep(NA,length(x))
for(i in 1:length(X)){
X[i]=max(rnorm(1,x[i],sig),0)
}
fit <- sampling(modelE,
data=list(n=length(X),X=X,ML=ML,p=p,sig=sig), iter = 10000, chains = 1)
res<-extract(fit)
res1[[b]]<-res$x
}
for(k in 1:length(res1)){
M<-M+mean(apply(res1[[k]],2,proba_rejet,ML=ML[i],p=p[j]))
}
Mat[i,j]=M
}
}
ML=c(20,30,50,100)
p=c(.01,.05,.10)
proba_rejet<-function(x,ML,p){
return(mean(mean(x>=ML)>=p))
}
n<-50
Mat<-matrix(NA,ncol=3,nrow=4)
B<-1000
B<-10
T1<-Sys.time()
for(i in 1:4){
for(j in 1:3){
M<-0
lambda0<-(-log(p[j]))/ML[i]
sig=.35/lambda0
for(b in 1:B){
x<-c(rexp(n,lambda0))
X<-rep(NA,length(x))
for(i in 1:length(X)){
X[i]=max(rnorm(1,x[i],sig),0)
}
fit <- sampling(modelE,
data=list(n=length(X),X=X,ML=ML,p=p,sig=sig), iter = 10000, chains = 1)
res<-extract(fit)
res1[[b]]<-res$x
}
for(k in 1:length(res1)){
M<-M+mean(apply(res1[[k]],2,proba_rejet,ML=ML[i],p=p[j]))
}
Mat[i,j]=M
}
}
n<-50
M<-0
lambda0<-(-log(p[j]))/ML[i]
sig=.35/lambda0
for(b in 1:B){
x<-c(rexp(n,lambda0))
X<-rep(NA,length(x))
for(i in 1:length(X)){
X[i]=max(rnorm(1,x[i],sig),0)
}
fit <- sampling(modelE,
data=list(n=length(X),X=X,ML=ML,p=p,sig=sig), iter = 10000, chains = 1)
res<-extract(fit)
res1[[b]]<-res$x
}
X
lambda0
ML=c(20,30,50,100)
p=c(.01,.05,.10)
i in 1
i in 1:4
j
i
i=1
M<-0
lambda0<-(-log(p[j]))/ML[i]
lambda0
sig=.35/lambda0
for(b in 1:B){
x<-c(rexp(n,lambda0))
X<-rep(NA,length(x))
for(i in 1:length(X)){
X[i]=max(rnorm(1,x[i],sig),0)
}
fit <- sampling(modelE,
data=list(n=length(X),X=X,ML=ML,p=p,sig=sig), iter = 10000, chains = 1)
res<-extract(fit)
res1[[b]]<-res$x
}
i=1
T1<-Sys.time()
for(i in 1:4){
for(j in 1:3){
M<-0
lambda0<-(-log(p[j]))/ML[i]
sig=.35/lambda0
for(b in 1:B){
x<-c(rexp(n,lambda0))
X<-rep(NA,length(x))
for(i in 1:length(X)){
X[i]=max(rnorm(1,x[i],sig),0)
}
fit <- sampling(modelE,
data=list(n=length(X),X=X,ML=ML,p=p[j],sig=sig), iter = 10000, chains = 1)
res<-extract(fit)
res1[[b]]<-res$x
}
for(k in 1:length(res1)){
M<-M+mean(apply(res1[[k]],2,proba_rejet,ML=ML[i],p=p[j]))
}
Mat[i,j]=M
}
}
res1<-list()
n<-50
Mat<-matrix(NA,ncol=3,nrow=4)
B<-1000
T1<-Sys.time()
for(i in 1:4){
for(j in 1:3){
M<-0
lambda0<-(-log(p[j]))/ML[i]
sig=.35/lambda0
for(b in 1:B){
x<-c(rexp(n,lambda0))
X<-rep(NA,length(x))
for(i in 1:length(X)){
X[i]=max(rnorm(1,x[i],sig),0)
}
fit <- sampling(modelE,
data=list(n=length(X),X=X,ML=ML,p=p[j],sig=sig), iter = 10000, chains = 1)
res<-extract(fit)
res1[[b]]<-res$x
}
for(k in 1:length(res1)){
M<-M+mean(apply(res1[[k]],2,proba_rejet,ML=ML[i],p=p[j]))
}
Mat[i,j]=M
}
}
n
x<-c(rexp(n,lambda0))
X<-rep(NA,length(x))
x
for(i in 1:length(X)){
X[i]=max(rnorm(1,x[i],sig),0)
}
X
fit <- sampling(modelE,
data=list(n=length(X),X=X,ML=ML,p=p[j],sig=sig), iter = 10000, chains = 1)
fit <- sampling(modelE,
data=list(n=length(X),X=X,ML=ML[i],p=p[j],sig=sig), iter = 10000, chains = 1)
ML[i]
i
B<-1000
T1<-Sys.time()
for(i in 1:4){
for(j in 1:3){
M<-0
lambda0<-(-log(p[j]))/ML[i]
sig=.35/lambda0
for(b in 1:B){
x<-c(rexp(n,lambda0))
X<-rep(NA,length(x))
for(k in 1:length(X)){
X[k]=max(rnorm(1,x[k],sig),0)
}
fit <- sampling(modelE,
data=list(n=length(X),X=X,ML=ML[i],p=p[j],sig=sig), iter = 10000, chains = 1)
res<-extract(fit)
res1[[b]]<-res$x
}
for(k in 1:length(res1)){
M<-M+mean(apply(res1[[k]],2,proba_rejet,ML=ML[i],p=p[j]))
}
Mat[i,j]=M
}
}
B
B<-10
T1<-Sys.time()
for(i in 1:4){
for(j in 1:3){
M<-0
lambda0<-(-log(p[j]))/ML[i]
sig=.35/lambda0
for(b in 1:B){
x<-c(rexp(n,lambda0))
X<-rep(NA,length(x))
for(k in 1:length(X)){
X[k]=max(rnorm(1,x[k],sig),0)
}
fit <- sampling(modelE,
data=list(n=length(X),X=X,ML=ML[i],p=p[j],sig=sig), iter = 10000, chains = 1)
res<-extract(fit)
res1[[b]]<-res$x
}
for(k in 1:length(res1)){
M<-M+mean(apply(res1[[k]],2,proba_rejet,ML=ML[i],p=p[j]))
}
Mat[i,j]=M
}
}
T2<-Sys.time()
(T2-T1)*100
(T2-T1)*100/60
save(Mat,file="~/Downloads/Mat.RData")
Mat
Mat/n
proba_rejet<-function(x,ML,p){
return(mean(mean(x>=ML)>=p))
}
proba_rejet(res1[[1]],ML=ML[i],p=p[j])
res1[[1]]
length(res1)
res1
M<-0
for(k in 1:length(res1)){
M<-M+mean(apply(res1[[k]],2,proba_rejet,ML=ML[i],p=p[j]))
}
M
proba_rejet<-function(x,ML,p){
return(sum(mean(x>=ML)>=p))
}
proba_rejet<-function(x,ML,p){
return(mean(mean(x>=ML)>=p))
}
M<-rep(NA,B)
for(k in 1:length(res1)){
M[k]<-sum(apply(res1[[k]],2,proba_rejet,ML=ML[i],p=p[j]))
}
mean(M)
M
ML[i]
p[j]
ML=c(20,30,50,100)
p=c(.001,.01,.05)
res1<-list()
proba_rejet<-function(x,ML,p){
return(mean(mean(x>=ML)>=p))
}
n<-50
Mat<-matrix(NA,ncol=3,nrow=4)
B<-10
T1<-Sys.time()
for(i in 1:length(ML)){
for(j in 1:length(p)){
M<-rep(NA,B)
lambda0<-(-log(p[j]))/ML[i]
sig=.35/lambda0
for(b in 1:B){
x<-c(rexp(n,lambda0))
X<-rep(NA,length(x))
for(k in 1:length(X)){
X[k]=max(rnorm(1,x[k],sig),0)
}
fit <- sampling(modelE,
data=list(n=length(X),X=X,ML=ML[i],p=p[j],sig=sig), iter = 10000, chains = 1)
res<-extract(fit)
res1[[b]]<-res$x
}
for(k in 1:length(res1)){
M[k]<-sum(apply(res1[[k]],2,proba_rejet,ML=ML[i],p=p[j]))
}
Mat[i,j]=mean(M)
}
}
T2<-Sys.time()
(T2-T1)*100/60
Mat
Mat/50
load("~/Nextcloud/M1.RData")
M
M1
M1/100
M
M1/50
load("~/Nextcloud/Mat.RData")
Mat
